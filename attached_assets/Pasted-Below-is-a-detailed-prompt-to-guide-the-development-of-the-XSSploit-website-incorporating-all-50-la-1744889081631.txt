Below is a detailed prompt to guide the development of the XSSploit website, incorporating all 50 labs with realistic, real-world lookalike designs, omitting database connections, and ensuring a professional UI with comprehensive features. The prompt includes a landing page with all necessary sections and a dedicated legal page accessible via the `/legal` app route, detailing global legal consequences, laws, and ethical hacking terms and conditions.

---

### Detailed Prompt for Building XSSploit Website

Develop a fully functional XSSploit website designed to educate users on cross-site scripting (XSS) vulnerabilities through a series of 50 realistic, real-world-inspired labs. The website should be accessible to all without login or registration, focusing solely on reflected and DOM-based XSS vulnerabilities (no stored XSS). The UI must mirror the sleek, modern aesthetic of a professional web platform, such as https://www.bloomrdesign.com/, with a clean layout, intuitive navigation, and responsive design. Avoid using any database connections; instead, rely on client-side storage (e.g., localStorage) or static data for session management and leaderboard functionality. Ensure the website includes a comprehensive landing page with all essential sections and a dedicated legal page accessible via the `/legal` route, outlining global legal consequences, relevant laws, and ethical hacking terms and conditions.

#### Project Requirements

1. **UI Design and Features**:
   - **Visual Style**: Adopt a professional look inspired by https://www.bloomrdesign.com/, using a color scheme with dark text (e.g., rgb(2, 2, 3)), vibrant accents (e.g., rgb(0, 119, 255)), and a font like Plus Jakarta Sans. Incorporate a navigation bar, hero section, lab dashboard, leaderboard, and footer with a consistent, real-world corporate feel.
   - **Responsiveness**: Ensure the design is fully responsive across desktop, tablet, and mobile devices using CSS Grid or Flexbox.
   - **Functionality**: Include interactive elements such as a modal for name input to create individual sessions, a lab selection interface, and a dynamic leaderboard displaying the top 10 users who complete all 50 labs in the least time. Use localStorage to track session data and completion times.
   - **Real-World Lookalike**: Design lab interfaces to resemble authentic web forms, search bars, or user input fields found in e-commerce sites, social media platforms, or corporate portals, making the XSS challenges believable and educational.

2. **Landing Page Sections**:
   - **Hero Section**: Feature a bold headline (e.g., "XSSploit Practice Platform") with a subheading ("Master XSS Vulnerabilities Safely. Developed by Karthik S Sathyan") and a call-to-action button ("Access Lab Dashboard") to initiate the experience.
   - **Terms and Conditions**: Display a brief summary with a link to the `/legal` page, warning users about legal consequences of unauthorized usage.
   - **Lab Overview**: Provide a teaser of the 50 labs, categorized into groups (e.g., Basic Reflected XSS, Advanced Techniques, Filter Bypass Challenges, Miscellaneous) with descriptions to entice users.
   - **Leaderboard**: Show a real-time top 10 list of users who completed all labs, sorted by completion time, updated client-side.
   - **About Section**: Include a brief about the developer (Karthik S Sathyan) and the purpose of XSSploit as an educational tool.
   - **Footer**: Add links to the legal page, a contact placeholder, and a copyright notice (e.g., © 2025 XSSploit).

3. **50 XSS Labs**:
   - Design all 50 labs to be realistic and reflective of real-world scenarios, avoiding stored XSS. Each lab should have a unique input mechanism and challenge, with clear instructions and a success condition (e.g., triggering an alert like "Xpwned"). Categories and examples include:
     - **Basic Reflected XSS**: Inject via query parameters (e.g., a search form), form submission, URL fragments, URL path segments, HTTP referrer header, cookies, User-Agent header, HTML tags, or error messages.
     - **DOM-based XSS**: Use innerHTML, document.write, eval(), JavaScript events (onclick, onmouseover), window.location.href, document.location, setAttribute(), dynamic event listeners, innerText, JavaScript URI, or mutation observers.
     - **Advanced Techniques**: Bypass Content Security Policy (CSP), reflect JSON responses, exploit JSONP endpoints, misuse Access-Control-Allow-Origin, srcdoc iframes, sandbox attributes, Base64-encoded payloads, SVG scripts, window.name, or template literals.
     - **Filter Bypass Challenges**: Circumvent blacklisted tags, use URL encoding/decoding, double encoding, null bytes, case-insensitive tags, invalid HTML, event handlers, inline style injection, template injection, or unescaped attributes.
     - **Miscellaneous**: Inject iframes, perform HTTP response splitting, reflect HTTP Content-Type headers, misuse PWA manifests, service workers, inline event handlers, CSS injection, DOM clobbering, or dynamic script sources.
   - Each lab should resemble a real-world web component (e.g., a login form, comment section, or search bar) and provide feedback on success (e.g., an alert or visual cue).

4. **Session Management**:
   - Implement a client-side session using localStorage, where users enter a name to create a unique identifier. This name is used solely for session tracking and leaderboard display, with no persistent storage beyond the session.
   - Track completion times for all 50 labs per user, calculating the total time upon completing all labs to update the leaderboard.

5. **Legal Page (/legal)**:
   - Create a dedicated route `/legal` rendering a page that details:
     - **Global Legal Consequences**: Outline laws related to unauthorized hacking, such as the Computer Fraud and Abuse Act (CFAA) in the USA, the Computer Misuse Act 1990 in the UK, the EU’s General Data Protection Regulation (GDPR) for data breaches, and similar regulations in Canada (e.g., Criminal Code Section 342.1), Australia (e.g., Cybercrime Act 2001), and India (e.g., Information Technology Act 2000).
     - **Ethical Hacking Terms**: Specify that XSSploit is for educational purposes only, requiring users to practice solely within the platform, respect intellectual property, and avoid targeting real systems.
     - **Terms and Conditions**: Include disclaimers on liability, usage restrictions, and the right to terminate access for misuse, with a clear acknowledgment requirement before accessing labs.
   - Design the page with a formal tone, structured sections, and a link back to the landing page.

6. **Development Process**:
   - **Planning**: Define the 50 labs with realistic scenarios, map UI sections, and draft the legal content.
   - **Prototyping**: Create wireframes for the landing page, lab dashboard, and legal page, ensuring alignment with the Bloomr Design aesthetic.
   - **Implementation**: Build the frontend with HTML/CSS/JavaScript, integrating lab challenges and session logic. Develop the Flask backend for routing and the `/legal` page.
   - **Testing**: Validate each lab for XSS vulnerability, ensure session tracking works, and verify legal content accuracy. Test across browsers (Chrome, Firefox, Safari) and devices.
   - **Deployment**: Host on a static server (e.g., Netlify or GitHub Pages) or a lightweight Flask server, ensuring no database dependencies.

7. **Deliverables**:
   - A complete HTML file for the landing page with all sections.
   - A separate HTML template for the legal page.
   - JavaScript files or inline scripts for lab interactions and session management.
   - CSS styles matching the Bloomr Design inspiration, with customizations for XSSploit branding.
   - Documentation outlining lab instructions and legal details.

8. **Success Criteria**:
   - All 50 labs are functional, realistic, and triggerable with appropriate XSS payloads (e.g., "Xpwned" alert).
   - The UI is professional, responsive, and mirrors real-world web platforms.
   - The landing page includes all specified sections with clear navigation.
   - The `/legal` page comprehensively covers global laws, ethical guidelines, and terms, accessible and readable.
   - No database connections are used, with all data managed client-side.

This prompt provides a roadmap to build a robust, educational XSSploit platform with a real-world look and feel, emphasizing security education and legal awareness.

---